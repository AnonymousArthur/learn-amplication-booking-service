/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookingOrderUpdateManyWithoutStoreEntitiesInput } from "./BookingOrderUpdateManyWithoutStoreEntitiesInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { EnumStoreEntityStatus } from "./EnumStoreEntityStatus";
import { StoreResourceUpdateManyWithoutStoreEntitiesInput } from "./StoreResourceUpdateManyWithoutStoreEntitiesInput";

@InputType()
class StoreEntityUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BookingOrderUpdateManyWithoutStoreEntitiesInput,
  })
  @ValidateNested()
  @Type(() => BookingOrderUpdateManyWithoutStoreEntitiesInput)
  @IsOptional()
  @Field(() => BookingOrderUpdateManyWithoutStoreEntitiesInput, {
    nullable: true,
  })
  bookingTransactions?: BookingOrderUpdateManyWithoutStoreEntitiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumStoreEntityStatus,
  })
  @IsEnum(EnumStoreEntityStatus)
  @IsOptional()
  @Field(() => EnumStoreEntityStatus, {
    nullable: true,
  })
  status?: "opening" | "closed" | "renovating" | null;

  @ApiProperty({
    required: false,
    type: () => StoreResourceUpdateManyWithoutStoreEntitiesInput,
  })
  @ValidateNested()
  @Type(() => StoreResourceUpdateManyWithoutStoreEntitiesInput)
  @IsOptional()
  @Field(() => StoreResourceUpdateManyWithoutStoreEntitiesInput, {
    nullable: true,
  })
  storeResources?: StoreResourceUpdateManyWithoutStoreEntitiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  storeType?: string;
}

export { StoreEntityUpdateInput as StoreEntityUpdateInput };
